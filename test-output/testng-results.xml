<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="48" passed="46">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="499" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:28Z">
    <groups>
      <group name="division">
        <method signature="CalculatorTest.divisionMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="divisionMethodTest" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
      </group> <!-- division -->
      <group name="ascii2char">
        <method signature="CharAsciiConversionTest.asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" class="com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest"/>
      </group> <!-- ascii2char -->
      <group name="multiplication">
        <method signature="CalculatorTest.multiplyMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="multiplyMethodTest" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
      </group> <!-- multiplication -->
      <group name="substraction">
        <method signature="CalculatorTest.substractMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="substractMethodTest" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
        <method signature="CalculatorTest.substractMethodTest2(int, int, int)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="substractMethodTest2" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
        <method signature="CalculatorTest.substractMethodTest3(int, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="substractMethodTest3" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
        <method signature="CalculatorTest.substractMethodTest4(double, int, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="substractMethodTest4" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
      </group> <!-- substraction -->
      <group name="char2ascii">
        <method signature="CharAsciiConversionTest.charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" class="com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest"/>
      </group> <!-- char2ascii -->
      <group name="addition">
        <method signature="CalculatorTest.addMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="addMethodTest" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
        <method signature="CalculatorTest.addMethodTest2(int, int, int)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="addMethodTest2" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
        <method signature="CalculatorTest.addMethodTest3(int, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="addMethodTest3" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
        <method signature="CalculatorTest.addMethodTest4(double, int, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="addMethodTest4" class="com.ab.TestNextGeneration.calculator.CalculatorTest"/>
      </group> <!-- addition -->
    </groups>
    <test name="Default test" duration-ms="499" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:28Z">
      <class name="com.ab.TestNextGeneration.utils.SendMailToManager">
        <test-method status="PASS" signature="sendingMailToManager()[pri:0, instance:com.ab.TestNextGeneration.utils.SendMailToManager@527740a2]" name="sendingMailToManager" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:29Z" finished-at="2018-07-25T08:02:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendingMailToManager -->
      </class> <!-- com.ab.TestNextGeneration.utils.SendMailToManager -->
      <class name="com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest">
        <test-method status="PASS" signature="seeHowBeforeClassWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeClassWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeClassWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="8" started-at="2018-07-25T08:02:27Z" data-provider="testData" finished-at="2018-07-25T08:02:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="4" started-at="2018-07-25T08:02:27Z" data-provider="testData" finished-at="2018-07-25T08:02:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[66]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="2" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[67]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="3" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="1" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[68]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="2" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="3" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="4" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[97]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="2" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="1" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[98]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="2" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="2" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="2" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="1" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[122]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="4" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[49]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="3" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="asciiToCharTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="asciiToCharTest" duration-ms="7" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[57]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asciiToCharTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="11" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="7" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[66]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[67]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="2" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="1" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[68]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="6" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="2" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[97]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="3" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="1" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[98]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="2" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="6" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="5" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[122]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="3" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[49]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="charToAsciiTest(char, int)[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="charToAsciiTest" duration-ms="7" started-at="2018-07-25T08:02:28Z" data-provider="testData" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[57]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- charToAsciiTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="FAIL" signature="m1()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="m1" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest.m1(CharAsciiConversionTest.java:65)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m1 -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="simpleMethod()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="simpleMethod" duration-ms="5" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleMethod -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="anotherSimpleMethod()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="anotherSimpleMethod" duration-ms="5" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- anotherSimpleMethod -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="24" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="anotherSimpleMethod()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="anotherSimpleMethod" duration-ms="2" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- anotherSimpleMethod -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="anotherSimpleMethod()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="anotherSimpleMethod" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- anotherSimpleMethod -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="anotherSimpleMethod()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="anotherSimpleMethod" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- anotherSimpleMethod -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeMethodWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="PASS" signature="anotherSimpleMethod()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="anotherSimpleMethod" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- anotherSimpleMethod -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterMethodWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfConversions -->
        <test-method status="SKIP" signature="m2()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="m2" duration-ms="0" started-at="2018-07-25T08:02:28Z" depends-on-methods="com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest.m1" finished-at="2018-07-25T08:02:28Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method CharAsciiConversionTest.m2()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method CharAsciiConversionTest.m2()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method status="PASS" signature="seeHowAfterClassWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterClassWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterClassWorksOfConversions -->
      </class> <!-- com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest -->
      <class name="com.ab.TestNextGeneration.utils.CheckChangesOnRepo">
        <test-method status="PASS" signature="checkIfYouHaveUpdatedYourProject()[pri:0, instance:com.ab.TestNextGeneration.utils.CheckChangesOnRepo@71423665]" name="checkIfYouHaveUpdatedYourProject" is-config="true" duration-ms="13" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfYouHaveUpdatedYourProject -->
      </class> <!-- com.ab.TestNextGeneration.utils.CheckChangesOnRepo -->
      <class name="com.ab.TestNextGeneration.calculator.CalculatorTest">
        <test-method status="PASS" signature="seeHowBeforeTestWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeTestWorksOfCalculator" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeTestWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeTestWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowBeforeTestWorksOfConversions" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:27Z" finished-at="2018-07-25T08:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeTestWorksOfConversions -->
        <test-method status="PASS" signature="seeHowBeforeClassWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeClassWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeClassWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="addMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="addMethodTest" duration-ms="1" started-at="2018-07-25T08:02:28Z" data-provider="addMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMethodTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="addMethodTest2(int, int, int)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="addMethodTest2" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="addMethodDataProvider2" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMethodTest2 -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="addMethodTest3(int, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="addMethodTest3" duration-ms="4" started-at="2018-07-25T08:02:28Z" data-provider="addMethodDataProvider3" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMethodTest3 -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="addMethodTest4(double, int, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="addMethodTest4" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="addMethodDataProvider4" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[40.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[55.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMethodTest4 -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="divisionMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="divisionMethodTest" duration-ms="4" started-at="2018-07-25T08:02:28Z" data-provider="divisionMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionMethodTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="divisionMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="divisionMethodTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="divisionMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.19999999999999998]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionMethodTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="4" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="divisionMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="divisionMethodTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="divisionMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionMethodTest -->
        <test-method status="PASS" signature="divisionMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="divisionMethodTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="divisionMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionMethodTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="31" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="multiplyMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="multiplyMethodTest" duration-ms="3" started-at="2018-07-25T08:02:28Z" data-provider="multiplyMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[40]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplyMethodTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="multiplyMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="multiplyMethodTest" duration-ms="4" started-at="2018-07-25T08:02:28Z" data-provider="multiplyMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplyMethodTest -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="multiplyMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="multiplyMethodTest" duration-ms="4" started-at="2018-07-25T08:02:28Z" data-provider="multiplyMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplyMethodTest -->
        <test-method status="PASS" signature="multiplyMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="multiplyMethodTest" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="multiplyMethodDataProvider1" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.840000000000001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplyMethodTest -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="substractMethodTest2(int, int, int)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="substractMethodTest2" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="substractMethodDataProvider2" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- substractMethodTest2 -->
        <test-method status="PASS" signature="substractMethodTest3(int, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="substractMethodTest3" duration-ms="0" started-at="2018-07-25T08:02:28Z" data-provider="substractMethodDataProvider3" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.7999999999999998]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- substractMethodTest3 -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="5" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="substractMethodTest4(double, int, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="substractMethodTest4" duration-ms="1" started-at="2018-07-25T08:02:28Z" data-provider="substractMethodDataProvider4" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.1999999999999993]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- substractMethodTest4 -->
        <test-method status="PASS" signature="seeHowAfterMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterMethodWorksOfCalculator" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterMethodWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowBeforeMethodWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowBeforeMethodWorksOfCalculator" is-config="true" duration-ms="1" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowBeforeMethodWorksOfCalculator -->
        <test-method status="PASS" signature="substractMethodTest(double, double, double)[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="substractMethodTest" duration-ms="1" started-at="2018-07-25T08:02:28Z" data-provider="substractMethodDataProvider1" depends-on-methods="com.ab.TestNextGeneration.calculator.CalculatorTest.addMethodTest3" finished-at="2018-07-25T08:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- substractMethodTest -->
        <test-method status="PASS" signature="seeHowAfterClassWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterClassWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterClassWorksOfCalculator -->
        <test-method status="PASS" signature="seeHowAfterTestWorksOfConversions()[pri:0, instance:com.ab.TestNextGeneration.asciiAndcharInterConversion.CharAsciiConversionTest@20398b7c]" name="seeHowAfterTestWorksOfConversions" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterTestWorksOfConversions -->
        <test-method status="PASS" signature="seeHowAfterTestWorksOfCalculator()[pri:0, instance:com.ab.TestNextGeneration.calculator.CalculatorTest@6fc6f14e]" name="seeHowAfterTestWorksOfCalculator" is-config="true" duration-ms="0" started-at="2018-07-25T08:02:28Z" finished-at="2018-07-25T08:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeHowAfterTestWorksOfCalculator -->
      </class> <!-- com.ab.TestNextGeneration.calculator.CalculatorTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
